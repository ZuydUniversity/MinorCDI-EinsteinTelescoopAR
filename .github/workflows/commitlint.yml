name: Conventional Commits Check

on:
  push:
  pull_request:

jobs:
  check-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # fetch full history to avoid invalid revision range

      - name: Validate commit messages
        run: |
          regex='^(feat|fix|docs|style|refactor|perf|test|chore|build|ci)(\([a-z0-9\-]+\))?: [a-z].+'

          # Determine commit range safely
          if git rev-parse ${{ github.event.before }} >/dev/null 2>&1; then
            commits=$(git log --no-merges --format=%s ${{ github.event.before }}..${{ github.sha }})
          else
            # First commit / new branch
            commits=$(git log -1 --no-merges --format=%s ${{ github.sha }})
          fi

          echo "üîé Checking commit messages..."
          invalid=0
          # Iterate over commits line by line
          echo "$commits" | while IFS= read -r commit; do
            # Skip empty, merge, or GitHub automatic commits
            if [ -z "$commit" ] || [[ "$commit" =~ ^Merge\ pull\ request ]] || [[ "$commit" =~ ^Create\ .* ]] || [[ "$commit" =~ ^Auto.* ]]; then
              echo "‚ö†Ô∏è Skipping commit: $commit"
              continue
            fi

            if ! echo "$commit" | grep -Eq "$regex"; then
              echo "‚ùå Invalid commit message: '$commit'"
              echo "   Must follow Conventional Commits: https://www.conventionalcommits.org/"
              invalid=1
            else
              echo "‚úÖ Valid: '$commit'"
            fi
          done

          # Fail the job if any invalid commit was found
          if [ "$invalid" -eq 1 ]; then
            exit 1
          fi
